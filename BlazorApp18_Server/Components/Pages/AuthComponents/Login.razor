@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@using ModelsClassLibrary.Models.DTO;

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="loginModel.UserName" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@code {
    private UserLoginDTO loginModel = new UserLoginDTO
    {
        UserName = string.Empty,
        Password = string.Empty
    };

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var tokens = await response.Content.ReadFromJsonAsync<AuthTokenDTO>();
            if (tokens != null)
            {
                // Store the JWT token in cookies with 5-minute expiry
                await JS.InvokeVoidAsync("blazorExtensions.WriteCookie", "jwtToken", tokens.AccessToken, 5);
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Login failed: {error}");
        }
    }
}
