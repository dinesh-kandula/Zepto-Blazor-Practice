@page "/signup"
@inject HttpClient Http
@inject NavigationManager Navigation
@using ModelsClassLibrary.Models.DTO

<h3>Signup</h3>

<EditForm Model="@signUpModel" OnValidSubmit="HandleSignup">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="signUpModel.Email" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText id="password" type="password" @bind-Value="signUpModel.Password" />
    </div>
    <div>
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" type="password" @bind-Value="signUpModel.FullName" />
    </div>
    <button type="submit">Signup</button>
</EditForm>

@code {
    private ZeptoUserDTO signUpModel = new ZeptoUserDTO
    {
        Email = string.Empty,
        FullName = string.Empty,
        Password = string.Empty,
        UserName = string.Empty
    };

    private async Task HandleSignup()
    {
        var response = await Http.PostAsJsonAsync("api/auth/signup", signUpModel);
        if (response.IsSuccessStatusCode)
        {
            // Handle successful signup (e.g., redirect to login)
            Navigation.NavigateTo("/login");
        }
        else
        {
            // Handle signup failure
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Signup failed: {error}");
        }
    }
}
