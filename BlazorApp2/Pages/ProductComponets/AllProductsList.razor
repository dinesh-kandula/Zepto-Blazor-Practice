@page "/all-products-list"
@using ModelsClassLibrary.Models
@inject BlazorApp2.Services.ApiServices apiServices

<div class="container-fluid mt-3">
    <div class="row">
        <div class="d-flex">

            <ProductsFilter OnFilterCategoryAsync=OnFilterCategoryAsync />

            <div>
                <div class="d-flex justify-content-end">
                    <ProductsSearch productNameSearch=@productNameSearch
                                    SearchTextEnter=FilterOnSearchText loader=SearchLoader />
                </div>

                <div class="container">
                    <div class="row flex-wrap justify-content-center">
                        <div class="d-flex justify-content-center my-2">
                            <MudPagination Color="Color.Primary" Count="@numberOfPages" SelectedChanged="@OnPageIndexChange" Selected="@pageIndex" />
                        </div>

                        @if (error)
                        {
                            <MudText Typo="Typo.h1" Color="Color.Error">@statusCodeError</MudText>
                        }
                        else if (Products.Count == 0)
                        {
                            <BlazorApp2.Pages.UIComponents.Spinner Height="80vh" />
                        }
                        else
                        {
                            @foreach (var product in Products)
                            {
                                <ProductPurchaseCard product=product />
                            }
                        }

                        <div class="d-flex justify-content-center my-2">
                            <MudPagination Color="Color.Primary" Count="@numberOfPages" SelectedChanged="@OnPageIndexChange" Selected="@pageIndex" />
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>
