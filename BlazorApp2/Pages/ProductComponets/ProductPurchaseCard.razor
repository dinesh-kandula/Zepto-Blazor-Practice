@using ModelsClassLibrary.Models
@using ModelsClassLibrary.Models.Enums
@inject BlazorApp2.Services.ProductCartService cartService
@inject ISnackbar Snackbar

@if (product != null)
{
    <div class="card p-0 m-3" style="width: 14rem; border-radius:20px;">
        <div class="position-absolute btn btn-dark product-offer" style="color:#0dcaf0;">@product.GetOfferPercentage()</div>
        <img src="@product.ImageUrl" style="border-top-left-radius:20px; border-top-right-radius:20px;" class="card-img-top" alt="@product.ProductName">
        <div class="card-body d-flex flex-column justify-content-between">
            <h5 class="card-title">@product.ProductName
                <br/>
                <MudText Typo="Typo.caption" Color="Color.Primary">@product.Quantity</MudText>
                </h5>
            <p class="link-info" 
                style="cursor:pointer;"
                > @product.GetCategoryDisplayName()
            </p>
                
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <p class="fw-light my-0 text-decoration-line-through" style="font-size:14px;">₹@product.BasePrice</p>
                    <p class="fw-bold m-0 fs-5">@product.GetDiscountedPrice()</p>
                </div>
                <MudButton Variant="@Variant.Filled" class="mud-theme-info mud-elevation-4 rounded-l-xl" OnClick="() => addToCard(product)">Add</MudButton>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public ModelsClassLibrary.Models.Product? product { get; set; }

    private void addToCard(Product product)
    {
        cartService.AddToCart(product);

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
        Snackbar.Add($"Added to Cart:-<br/> <ul><li>Product Name: {product.ProductName}</li><li>Quantity: {product.Quantity}</li></ul>", 
        Severity.Success, config =>
        {
            config.CloseAfterNavigation = true;
            config.VisibleStateDuration = 6000;
        });
        StateHasChanged();
    }
}
