@using ModelsClassLibrary.Models
@using ModelsClassLibrary.Models.Enums

<div class="sidebar" style="overflow:auto">
    <div>
        <MudText Typo="Typo.h6" Color="Color.Secondary">Filter Categories</MudText>
        <MudChipSet MultiSelection="true" Filter="true"
                    SelectedValuesChanged="category => onSelectedValuesChanges(category)">
            @foreach (CategoryEnum category in Enum.GetValues(typeof(CategoryEnum)).Cast<CategoryEnum>().ToList())
            {
                <MudChip Text="@product.ConvertCategory(category.ToString())"
                         Value="@category"
                         Variant="Variant.Text" Color="Color.Success"
                         SelectedColor="Color.Error"
                ></MudChip>
            }
        </MudChipSet>
    </div>
</div>

@code {
    private Product product = new() { ProductName = "", Quantity = "" };

    [Parameter]
    public EventCallback<ICollection<object>> OnFilterCategoryAsync { get; set; }

    private async void onSelectedValuesChanges(ICollection<object> selectedCollection)
    {
        await OnFilterCategoryAsync.InvokeAsync(selectedCollection);
    }
}
